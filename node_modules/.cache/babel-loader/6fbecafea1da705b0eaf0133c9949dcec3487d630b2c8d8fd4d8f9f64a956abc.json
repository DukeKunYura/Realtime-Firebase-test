{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  text: \"\",\n  isActiveAdderWindow: false,\n  categories: [\"антибиотики\", \"анальгетики\", \"витамины\", \"спазмальгетики\", \"hvhjg444jh\", \"jfhj44kjkl\", \"vgvjhg2kjh\", \"ghg99jh\", \"hhj787kjkj\", \"g4hgh\", \"hvhjgjh\", \"jfhjkjkl\", \"vgvjhgkfrjh\", \"ghgjggh\", \"hhjkjkj\", \"ghgh\", \"ytjhgj\"],\n  medications: []\n};\nexport const masterSlice = createSlice({\n  name: 'master',\n  initialState,\n  reducers: {\n    setText: (state, action) => {\n      state.text = action.payload;\n    },\n    addMedication: (state, action) => {\n      state.medications = [action.payload, ...state.medications];\n    },\n    editMedication: (state, action) => {\n      state.medications = state.medications.filter(item => item.id !== action.payload.id);\n      let medication = action.payload.values;\n      medication.id = action.payload.id;\n      state.medications = [medication, ...state.medications];\n      console.log(medication);\n    },\n    deleteMedication: (state, action) => {\n      state.medications = state.medications.filter(item => item.id !== action.payload);\n    },\n    setIsActiveAdderWindow: (state, action) => {\n      state.isActiveAdderWindow = action.payload;\n    },\n    addCategory: (state, action) => {\n      state.categories = [...state.categories, action.payload];\n    }\n  }\n});\nexport const {\n  setText,\n  addMedication,\n  editMedication,\n  setIsActiveAdderWindow,\n  addCategory,\n  deleteMedication\n} = masterSlice.actions;\nexport default masterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","text","isActiveAdderWindow","categories","medications","masterSlice","name","reducers","setText","state","action","payload","addMedication","editMedication","filter","item","id","medication","values","console","log","deleteMedication","setIsActiveAdderWindow","addCategory","actions","reducer"],"sources":["D:/code/React/test-fire/src/redux/masterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    text: \"\",\n    isActiveAdderWindow: false,\n    categories: [\"антибиотики\", \"анальгетики\", \"витамины\", \"спазмальгетики\", \"hvhjg444jh\", \"jfhj44kjkl\",\n        \"vgvjhg2kjh\", \"ghg99jh\", \"hhj787kjkj\", \"g4hgh\", \"hvhjgjh\", \"jfhjkjkl\", \"vgvjhgkfrjh\", \"ghgjggh\",\n        \"hhjkjkj\", \"ghgh\", \"ytjhgj\"],\n    medications: []\n};\n\nexport const masterSlice = createSlice({\n    name: 'master',\n    initialState,\n    reducers: {\n        setText: (state, action) => {\n            state.text = action.payload\n        },\n        addMedication: (state, action) => {\n            state.medications = [action.payload, ...state.medications];\n        },\n        editMedication: (state, action) => {\n            state.medications = state.medications.filter(item => item.id !== action.payload.id)\n            let medication = action.payload.values;\n            medication.id = action.payload.id;\n            state.medications = [medication, ...state.medications];\n            console.log(medication);\n        },\n        deleteMedication: (state, action) => {\n            state.medications = state.medications.filter(item => item.id !== action.payload)\n        },\n        setIsActiveAdderWindow: (state, action) => {\n            state.isActiveAdderWindow = action.payload\n        },\n        addCategory: (state, action) => {\n            state.categories = [...state.categories, action.payload]\n        }\n    }\n});\n\n\nexport const {\n    setText,\n    addMedication,\n    editMedication,\n    setIsActiveAdderWindow,\n    addCategory,\n    deleteMedication } = masterSlice.actions;\n\nexport default masterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRC,mBAAmB,EAAE,KAAK;EAC1BC,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAC/F,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAC/F,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC;EAChCC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,QAAQ;EACdN,YAAY;EACZO,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,aAAa,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACL,WAAW,GAAG,CAACM,MAAM,CAACC,OAAO,EAAE,GAAGF,KAAK,CAACL,WAAW,CAAC;IAC9D,CAAC;IACDS,cAAc,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACL,WAAW,GAAGK,KAAK,CAACL,WAAW,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACnF,IAAIC,UAAU,GAAGP,MAAM,CAACC,OAAO,CAACO,MAAM;MACtCD,UAAU,CAACD,EAAE,GAAGN,MAAM,CAACC,OAAO,CAACK,EAAE;MACjCP,KAAK,CAACL,WAAW,GAAG,CAACa,UAAU,EAAE,GAAGR,KAAK,CAACL,WAAW,CAAC;MACtDe,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IAC3B,CAAC;IACDI,gBAAgB,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACL,WAAW,GAAGK,KAAK,CAACL,WAAW,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAAC;IACpF,CAAC;IACDW,sBAAsB,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACP,mBAAmB,GAAGQ,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDY,WAAW,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACN,UAAU,GAAG,CAAC,GAAGM,KAAK,CAACN,UAAU,EAAEO,MAAM,CAACC,OAAO,CAAC;IAC5D;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EACTH,OAAO;EACPI,aAAa;EACbC,cAAc;EACdS,sBAAsB;EACtBC,WAAW;EACXF;AAAiB,CAAC,GAAGhB,WAAW,CAACmB,OAAO;AAE5C,eAAenB,WAAW,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: [],\n  isActiveEditing: false,\n  isActiveAdder: false,\n  idEditingPost: \"\",\n  medications: []\n};\nexport const masterSlice = createSlice({\n  name: 'master',\n  initialState,\n  reducers: {\n    setStoreText: (state, action) => {\n      state.text = action.payload;\n      console.log(action.payload);\n    },\n    setStorePosts: (state, action) => {\n      state.posts = action.payload.reverse();\n    },\n    addStoreText: (state, action) => {\n      state.posts = [action.payload, ...state.posts];\n    },\n    editMedication: (state, action) => {\n      state.medications = state.medications.filter(item => item.id !== action.payload.id);\n      let medication = action.payload.values;\n      medication.id = action.payload.id;\n      state.medications = [medication, ...state.medications];\n      console.log(medication);\n    },\n    editPost: (state, action) => {\n      state.posts = state.posts.filter(item => item.id !== action.payload.id);\n      let post = action.payload;\n      state.posts = [post, ...state.posts];\n    },\n    setIdEditingPost: (state, action) => {\n      state.idEditingPost = action.payload;\n    }\n  }\n});\nexport const {\n  setStoreText,\n  setStorePosts,\n  addStoreText,\n  editMedication,\n  setIdEditingPost,\n  setIsActiveEditing,\n  setIsActiveAdder,\n  editPost\n} = masterSlice.actions;\nexport default masterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","isActiveEditing","isActiveAdder","idEditingPost","medications","masterSlice","name","reducers","setStoreText","state","action","text","payload","console","log","setStorePosts","reverse","addStoreText","editMedication","filter","item","id","medication","values","editPost","post","setIdEditingPost","setIsActiveEditing","setIsActiveAdder","actions","reducer"],"sources":["C:/Duke/My Code and projects/Code/React/Realtime-Firebase-test/src/redux/masterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    isActiveEditing: false,\r\n    isActiveAdder: false,\r\n    idEditingPost: \"\",\r\n    medications: []\r\n};\r\n\r\nexport const masterSlice = createSlice({\r\n    name: 'master',\r\n    initialState,\r\n    reducers: {\r\n        setStoreText: (state, action) => {\r\n            state.text = action.payload\r\n            console.log(action.payload)\r\n        },\r\n        setStorePosts: (state, action) => {\r\n            state.posts = action.payload.reverse()\r\n        },\r\n        addStoreText: (state, action) => {\r\n            state.posts = [action.payload, ...state.posts];\r\n        },\r\n        editMedication: (state, action) => {\r\n            state.medications = state.medications.filter(item => item.id !== action.payload.id);\r\n            let medication = action.payload.values;\r\n            medication.id = action.payload.id;\r\n            state.medications = [medication, ...state.medications];\r\n            console.log(medication);\r\n        },\r\n        editPost: (state, action) => {\r\n            state.posts = state.posts.filter(item => item.id !== action.payload.id);\r\n            let post = action.payload;\r\n            state.posts = [post, ...state.posts]\r\n\r\n        },\r\n        setIdEditingPost: (state, action) => {\r\n            state.idEditingPost = action.payload\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const {\r\n    setStoreText,\r\n    setStorePosts,\r\n    addStoreText,\r\n    editMedication,\r\n    setIdEditingPost,\r\n    setIsActiveEditing,\r\n    setIsActiveAdder,\r\n    editPost } = masterSlice.actions;\r\n\r\nexport default masterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,eAAe,EAAE,KAAK;EACtBC,aAAa,EAAE,KAAK;EACpBC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGP,WAAW,CAAC;EACnCQ,IAAI,EAAE,QAAQ;EACdP,YAAY;EACZQ,QAAQ,EAAE;IACNC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACE,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3BC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC;IAC/B,CAAC;IACDG,aAAa,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACE,OAAO,CAACI,OAAO,EAAE;IAC1C,CAAC;IACDC,YAAY,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACT,KAAK,GAAG,CAACU,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACT,KAAK,CAAC;IAClD,CAAC;IACDkB,cAAc,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACL,WAAW,GAAGK,KAAK,CAACL,WAAW,CAACe,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACE,OAAO,CAACS,EAAE,CAAC;MACnF,IAAIC,UAAU,GAAGZ,MAAM,CAACE,OAAO,CAACW,MAAM;MACtCD,UAAU,CAACD,EAAE,GAAGX,MAAM,CAACE,OAAO,CAACS,EAAE;MACjCZ,KAAK,CAACL,WAAW,GAAG,CAACkB,UAAU,EAAE,GAAGb,KAAK,CAACL,WAAW,CAAC;MACtDS,OAAO,CAACC,GAAG,CAACQ,UAAU,CAAC;IAC3B,CAAC;IACDE,QAAQ,EAAE,CAACf,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACT,KAAK,GAAGS,KAAK,CAACT,KAAK,CAACmB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACE,OAAO,CAACS,EAAE,CAAC;MACvE,IAAII,IAAI,GAAGf,MAAM,CAACE,OAAO;MACzBH,KAAK,CAACT,KAAK,GAAG,CAACyB,IAAI,EAAE,GAAGhB,KAAK,CAACT,KAAK,CAAC;IAExC,CAAC;IACD0B,gBAAgB,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACE,OAAO;IACxC;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EACTJ,YAAY;EACZO,aAAa;EACbE,YAAY;EACZC,cAAc;EACdQ,gBAAgB;EAChBC,kBAAkB;EAClBC,gBAAgB;EAChBJ;AAAS,CAAC,GAAGnB,WAAW,CAACwB,OAAO;AAEpC,eAAexB,WAAW,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}